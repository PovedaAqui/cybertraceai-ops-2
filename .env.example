# CyberTrace AI Environment Configuration Template
# Copy this file to .env and fill in your actual values

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# PostgreSQL connection settings (auto-configured for Docker deployment)
POSTGRES_DB=cybertraceai
POSTGRES_USER=postgres
POSTGRES_PASSWORD=cybertraceai2024

# Full database URL (auto-constructed in Docker, but you can override)
POSTGRES_URL=postgresql://postgres:cybertraceai2024@localhost:5432/cybertraceai

# =============================================================================
# NEXTAUTH.JS AUTHENTICATION
# =============================================================================
# NextAuth configuration
NEXTAUTH_URL=http://localhost:3000
NEXTAUTH_SECRET=your-super-secret-jwt-secret-here-change-this

# Google OAuth Provider (required for authentication)
# Get these from Google Cloud Console: https://console.cloud.google.com/
AUTH_GOOGLE_ID=your_google_client_id_here
AUTH_GOOGLE_SECRET=your_google_client_secret_here

# =============================================================================
# AI INTEGRATION
# =============================================================================
# OpenRouter API Key (REQUIRED for AI chat functionality)
# Get your key from: https://openrouter.ai/keys
OPENROUTER_API_KEY=your_openrouter_api_key_here

# OpenRouter Base URL (optional, uses default if not set)
OPENROUTER_BASE_URL=https://openrouter.ai/api/v1

# =============================================================================
# SUZIEQ MCP SERVER (Network Observability)
# =============================================================================
# SuzieQ MCP server configuration (auto-configured for Docker deployment)
SUZIEQ_API_ENDPOINT=http://suzieq-mcp:8000/api/v2
SUZIEQ_API_KEY=suzieq-default-key

# =============================================================================
# OPTIONAL INTEGRATIONS
# =============================================================================
# Tavily API for web search (optional)
TAVILY_API_KEY=your_tavily_api_key_if_needed

# =============================================================================
# DEVELOPMENT/TESTING
# =============================================================================
# Set to development for local development
NODE_ENV=production

# =============================================================================
# DOCKER-SPECIFIC OVERRIDES
# =============================================================================
# The following are automatically configured when using Docker Compose,
# but you can override them if needed:

# For local development (non-Docker), change database host to localhost
# POSTGRES_URL=postgresql://postgres:cybertraceai2024@localhost:5432/cybertraceai

# For local development (non-Docker), use different SuzieQ endpoint
# SUZIEQ_API_ENDPOINT=http://localhost:8000/api/v2

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================
# 1. Copy this file: cp .env.example .env
# 2. Set your OPENROUTER_API_KEY (required)
# 3. Set your Google OAuth credentials (AUTH_GOOGLE_ID and AUTH_GOOGLE_SECRET)
# 4. Generate a secure NEXTAUTH_SECRET
# 5. Run: docker compose up -d
# 6. Access the app at: http://localhost:3000